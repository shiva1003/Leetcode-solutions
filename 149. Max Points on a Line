class Solution:
    def maxPoints(self, points: List[List[int]]) -> int:
        count = 1 # Store the count
        for i in range(0,len(points)):
            dict_slope = {}  # Creating a dictionary(hashmap) 
            for j in range(i+1,len(points)):
                if points[j][0] - points[i][0] == 0: # Checking if the slope is perpendicular or not as the x2-x1 == 0 defines slope is at 90 degree
                    slope = 'INF'
                else:
                    slope = (points[j][1] - points[i][1]) / (points[j][0] - points[i][0]) # Using two-point form
                if slope in dict_slope: # using map to store the slope count with respect to a single point
                    dict_slope[slope] += 1
                else:
                    dict_slope[slope] = 1
            for i in dict_slope: # Counting the maximum count of slope
                count = max(count,dict_slope[i]+1) # Here we're adding 1 to include the point points[i] itself.
        return count
