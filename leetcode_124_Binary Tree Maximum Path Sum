# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        nonroot = root.val
        def dfs(root:TreeNode)->int:
            nonlocal nonroot
            if not root:
                return float('-inf')
            else:
                left = dfs(root.left)
                right = dfs(root.right)
                mid = root.val
                nonroot = max(nonroot, left + right + mid, left, right)
                return max(mid,left + mid, right + mid)

        return max(dfs(root),nonroot)
